name: ci

on:
  push:
    branches:
      - "main"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mkdoc-sample
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: checkout
        uses: actions/checkout@v3
#      - name: Build image
#        run: docker build . --file Dockerfile --tag=$IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
#      - name: Log in to registry
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghrc.io -u $ --password-stdin
      - name: Docker login action
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#      - name: Push image
#        run: |
#          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
#          # Change all uppercase to lowercase
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#          # Strip git ref prefix from version
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#          # Strip "v" prefix from tag name
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          # Use Docker `latest` tag convention
#          [ "$VERSION" == "main" ] && VERSION=latest
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=$VERSION
#          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
